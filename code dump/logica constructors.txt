	Gate(int id, std::vector<bool*> connectionList, std::vector<bool> notList, bool Reverse=false, std::string input = "0", std::string *inputAddress = NULL, int *weightAddress = NULL, int weight = 0);
	Gate(int id, std::vector<bool*> connectionList, std::vector<bool> notList, bool Reverse=false, std::string output = "0", std::string *outputAddress = NULL, int *weightAddress = NULL, int weight = 0);
	Gate(int id, std::vector<bool*> connectionList, std::vector<bool> notList, bool Reverse=false, int *weightAddress = NULL, int weight = 0);



Gate::Gate(int id, std::vector<bool*> connectionList, std::vector<bool> notList, bool Reverse , std::string input , std::string *inputAddress , int *weightAddress , int weight) {
	
	this->id = id;
	this->connection = connectionList;
	this->notList = notList;
	this->inputValue = input;
	this->inputAddress = inputAddress;
	this->weightAddress = weightAddress;
	this->weight = weight;
	this->notReverse = !Reverse;

}
Gate::Gate(int id, std::vector<bool*> connectionList, std::vector<bool> notList, bool Reverse, std::string output, std::string *outputAddress , int *weightAddress , int weight ) {
	
	this->id = id;
	this->connection = connectionList;
	this->notList = notList;
	this->outputValue = output;
	this->outputAddress = outputAddress;
	this->weightAddress = weightAddress;
	this->weight = weight;
	this->notReverse = !Reverse;
}
Gate::Gate(int id, std::vector<bool*> connectionList, std::vector<bool> notList, bool Reverse , int *weightAddress , int weight ) {
	
	this->id = id;
	this->connection = connectionList;
	this->notList = notList;
	this->weightAddress = weightAddress;
	this->weight = weight;
	this->notReverse = !Reverse;

}